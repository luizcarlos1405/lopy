var h=Object.defineProperty,I=Object.defineProperties;var g=Object.getOwnPropertyDescriptors;var i=Object.getOwnPropertySymbols;var v=Object.prototype.hasOwnProperty,u=Object.prototype.propertyIsEnumerable;var d=(a,e,n)=>e in a?h(a,e,{enumerable:!0,configurable:!0,writable:!0,value:n}):a[e]=n,r=(a,e)=>{for(var n in e||(e={}))v.call(e,n)&&d(a,n,e[n]);if(i)for(var n of i(e))u.call(e,n)&&d(a,n,e[n]);return a},c=(a,e)=>I(a,g(e));import{D as y}from"./vendor-4d7ef4b9.js";const s={token:localStorage.getItem("token"),pageId:localStorage.getItem("pageId"),transactionsDatabaseId:localStorage.getItem("transactionsDatabaseId"),envelopesDatabaseId:localStorage.getItem("envelopesDatabaseId"),apiEndpoint:"https://lopy-notion-api.deno.dev/api/"},l=y({envelopes:[]}),b=async()=>{const a=new Headers;a.append("procedure","listEnvelopes"),a.append("Authorization",`Bearer ${s.token}`),a.append("Content-Type","application/json");const e=JSON.stringify({envelopesDatabaseId:s.envelopesDatabaseId}),n={method:"POST",headers:a,body:e},p=await fetch(`${s.apiEndpoint}notion-procedures`,n).then(o=>o.json()).catch(o=>(console.error(o),[]));l.update(o=>c(r({},o),{envelopes:p}))},f=async({envelopeId:a})=>{const e=new Headers;e.append("procedure","listEnvelopeTransactions"),e.append("Authorization",`Bearer ${s.token}`),e.append("Content-Type","application/json");const n=JSON.stringify({transactionsDatabaseId:s.transactionsDatabaseId,envelopePageId:a}),p={method:"POST",headers:e,body:n},o=await fetch(`${s.apiEndpoint}notion-procedures`,p).then(t=>t.json()).catch(t=>(console.error(t),[]));l.update(t=>c(r({},t),{transactionsByEnvelopeId:c(r({},t.transactionsByEnvelopeId),{[a]:o})}))},E=async({envelopeId:a,transaction:e})=>{const n=new Headers;n.append("procedure","addTransaction"),n.append("Authorization",`Bearer ${s.token}`),n.append("Content-Type","application/json");const p=JSON.stringify({transactionsDatabaseId:s.transactionsDatabaseId,envelopePageId:a,description:e.comment||"",value:e.value/100}),o={method:"POST",headers:n,body:p};await fetch(`${s.apiEndpoint}notion-procedures`,o).then(t=>t.json()).catch(t=>(console.error(t),[])),await b(),await f({envelopeId:a})};export{f as a,s as c,b as f,l as n,E as s};
